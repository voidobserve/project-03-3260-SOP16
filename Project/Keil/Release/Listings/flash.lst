C51 COMPILER V9.60.7.0   FLASH                                                             03/18/2025 09:10:52 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE FLASH
OBJECT MODULE PLACED IN .\Release\Objects\flash.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\..\User\flash.c LARGE OPTIMIZE(9,SIZE) BROWSE INTVECTOR(0X000C) INCDI
                    -R(..\..\Libraries\Include;..\..\User;..\..\User\lib) INTERVAL(3) DEBUG OBJECTEXTEND PRINT(.\Release\Listings\flash.lst) 
                    -OBJECT(.\Release\Objects\flash.obj)

line level    source

   1          // 芯片内部的flash相关操作的源程序
   2          #include "flash.h"
   3          
   4          #define FLASH_START_ADDR (0x00) // 起始地址128byte对齐
   5          
   6          /**
   7           * @brief  flash erase sector
   8           * @param  addr : sector address in flash
   9           * @retval None
  10           */
  11          void flash_erase_sector(u8 addr)
  12          {
  13   1          FLASH_ADDR = 0x3F;
  14   1          FLASH_ADDR = addr;
  15   1          FLASH_PASSWORD = FLASH_PASSWORD(0xB9); // 写入操作密码
  16   1          FLASH_CON = FLASH_SER_TRG(0x1);        // 触发扇区擦除
  17   1      
  18   1          while (!(FLASH_STA & FLASH_SER_FLG(0x1)))
  19   1          {
  20   2              WDT_KEY = WDT_KEY_VAL(0xAA);
  21   2          }; // 等待扇区擦除空闲
  22   1      }
  23          
  24          /**
  25           * @brief  flash program
  26           * @param  addr   : Write data address in flash
  27           * @param  p_data : Write data to flash
  28           * @param  len    : Data length
  29           * @retval None
  30           */
  31          void flash_write(u8 addr, u8 *p_data, u8 len)
  32          {
  33   1          FLASH_ADDR = 0x3F;
  34   1          FLASH_ADDR = addr;
  35   1      
  36   1          while (len >= 1)
  37   1          {
  38   2              while (!(FLASH_STA & FLASH_PROG_FLG(0x1)))
  39   2              {
  40   3                  WDT_KEY = WDT_KEY_VAL(0xAA);
  41   3              }; // 等待烧录空闲
  42   2              FLASH_DATA = *(p_data++);
  43   2              FLASH_PASSWORD = FLASH_PASSWORD(0xB9); // 写入操作密码
  44   2              FLASH_CON = FLASH_PROG_TRG(0x1);       // 触发烧录
  45   2      
  46   2              len -= 1;
  47   2          }
  48   1      }
  49          
  50          /**
  51           * @brief  flash program
  52           * @param  addr   : Read data address in flash
  53           * @param  p_data : Read data to flash
C51 COMPILER V9.60.7.0   FLASH                                                             03/18/2025 09:10:52 PAGE 2   

  54           * @param  len    : Data length
  55           * @retval None
  56           */
  57          void flash_read(u8 addr, u8 *p_data, u8 len)
  58          {
  59   1          while (len != 0)
  60   1          {
  61   2              *(p_data++) = *((u8 code *)(0x3F00 + addr++));
  62   2              len--;
  63   2              WDT_KEY = WDT_KEY_VAL(0xAA);
  64   2          }
  65   1      }
  66          
  67          // 测试函数，测试能够实现flash的读写
  68          // 使用前需要先初始化P12
  69          void flash_test(void)
  70          {
  71   1          unsigned int device_addr = 0x12345678;
  72   1          unsigned int buf = 0;
  73   1      
  74   1          flash_erase_sector(0x00);
  75   1          // 写入数据
  76   1          flash_write(0x00, (unsigned char *)&device_addr, sizeof(device_addr));
  77   1          // 读取数据
  78   1          flash_read(0x00, (unsigned char *)&buf, sizeof(buf));
  79   1      
  80   1          if ((const unsigned int)0x12345678 == buf)
  81   1          {
  82   2              P12 = 0;
  83   2          }
  84   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    201    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      14
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
